{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 def sieve_of_eratosthenes(limit):\
    """\
    This function returns a list of all prime numbers up to a given limit.\
    :param limit: int\
    :return: list\
    """\
    primes = [True] * (limit + 1)\
    p = 2\
    while p * p <= limit:\
        if primes[p]:\
            for i in range(p * p, limit + 1, p):\
                primes[i] = False\
        p += 1\
    prime_numbers = [p for p in range(2, limit + 1) if primes[p]]\
    return prime_numbers\
\
# Define the limit\
limit = 50\
\
# Get the list of prime numbers up to the limit\
prime_numbers = sieve_of_eratosthenes(limit)\
\
# Print the prime numbers\
print(f"Prime numbers up to \{limit\} are:")\
print(prime_numbers)\
\
# Another test for you\
limit = 100\
prime_numbers = sieve_of_eratosthenes(limit)\
print(f"Prime numbers up to \{limit\} are:")\
print(prime_numbers)\
}